<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>

<mapper namespace="com.back.mypage.dao.MypageDAO">

	<insert id="report" parameterType="map">
	INSERT INTO report (id, report_tit, report_content, report_write_idx, report_write_type)
		VALUES (#{id},#{report_tit}, #{report_content}, #{report_write_idx}, #{report_write_type})
	</insert>
	
	<select id="jjimList" resultType="com.back.mypage.dto.MypageDTO">
		SELECT
			j.like_idx AS jjimIdx
			, c.court_name AS courtName
			, c.court_address AS courtAddress
			, c.court_price AS courtPrice
		FROM jjim j 
		JOIN court c 
		ON j.court_idx = c.court_idx 
		WHERE j.id = #{param1}
	</select>
	
	<select id="jjimListCount" resultType="int">
		SELECT
			COUNT(j.like_idx) AS jjimIdx
		FROM jjim j 
		JOIN court c 
		ON j.court_idx = c.court_idx 
		WHERE j.id = #{param1}
	</select>
	
	<delete id="jjimDel">
		
		DELETE FROM jjim
		WHERE like_idx = #{param1}
	
	</delete>

<!-- ============ 포인트 관련 쿼리 =============== -->

<select id="point_list" resultType="com.back.mypage.dto.MypageDTO">
	SELECT point_idx, point_date, point_change, point_state FROM point_list where id = #{param1}
</select>

<insert id="Charging_do"> 
	INSERT into point_list(id,point_change,point_state)values(#{param1},#{param2},"충전")
</insert>

<insert id="PointMinus"> 
	INSERT into point_list(id,point_change,point_state)values(#{param1},#{param2},"환급")
</insert>

<select id="point" resultType="String"> 
	SELECT 
		( (SELECT SUM(point_change) FROM point_list ps where id =#{param1} AND point_state ="충전") - 
		SUM(point_change) ) as point 
	FROM point_list pl where id=#{param1} AND point_state ="환급";
</select>

<select id="point_list_ajax" resultType="com.back.mypage.dto.MypageDTO">
	SELECT 
		point_idx
		,point_date
		,point_change
		,point_state 
	FROM point_list where id = #{param1} ORDER BY point_idx DESC LIMIT #{param2} OFFSET #{param3}
</select>

<select id="point_allConut" resultType="Integer">
	SELECT CEIL(COUNT(id)/#{param1}) AS pages FROM point_list where id = #{param2}
</select>

<update id="point_update">
	UPDATE member set point = (SELECT 
		(
		(SELECT SUM(point_change) FROM point_list ps where id =#{param1} AND point_state ="충전")-
		SUM(point_change)
		)
	FROM point_list pl where id=#{param1} AND point_state ="환급") where id=#{param1}
</update>


<!-- =========== 신청/예약 리스트 =====================  -->

<select id="official_match_list_ajax" resultType="com.back.official.dto.OfficialDTO">
SELECT om.official_match_idx
	   ,om.official_match_date
	   ,CONCAT(om.official_match_start_time," ~ ",
	   om.official_match_end_time) as time
	   ,omal.official_match_ask_idx
	   ,omal.official_match_ask_state
	   ,omal.id 
FROM official_match om
right outer join
offcial_match_ask_list omal on omal.official_match_idx = om.official_match_idx WHERE omal.id =#{param1}
ORDER BY om.official_match_date  DESC LIMIT #{param2} OFFSET #{param3}
</select>

<!-- 페이징 페이지 자동으로 계산 해줌 -->
<select id="official_match_allConut" resultType="Integer">
SELECT CEIL(COUNT(id)/#{param1}) FROM offcial_match_ask_list where id = #{param2};
</select>


<!-- 게스트 리스트  -->
<select id="guest_match_list_ajax"  resultType="com.back.mypage.dto.MypageDTO">
	SELECT
	cb.booking_date
	,CONCAT(cb.booking_start_time, ' ~ ', cb.booking_end_time) AS guest_time
	,guest_idx.guest_join_state FROM court_booking cb 
join(
	SELECT gj.court_booking_idx
		  ,gjl.guest_join_state 
	FROM guest_join_list gjl join guest_join gj on gjl.guest_idx = gj.guest_idx where gjl.id =#{param1})as guest_idx
on cb.court_booking_idx = guest_idx.court_booking_idx ORDER BY cb.booking_date LIMIT #{param2} offset #{param3};
</select>

<select id="guest_match_allConu" resultType="Integer">
SELECT CEIL(COUNT(guest_join_idx)/#{param1}) FROM guest_join_list where id = #{param2}
</select>

<!-- 구장 예약 -->

<select id="court_match_list_ajax" resultType="com.back.mypage.dto.MypageDTO">
	SELECT 
		c.court_name
		,cb.booking_date
		,CONCAT(cb.booking_start_time," ~ ",cb.booking_start_time) as court_time
	FROM court c join court_booking cb 
	on c.court_idx=cb.court_idx where cb.id=#{param1} order BY cb.booking_date LIMIT #{param2} offset #{param3}
</select>

<!-- 페이징 처리 -->
<select id="court_match_allConu" resultType="Integer">
SELECT CEIL(COUNT(court_booking_idx)/#{param1}) FROM court_booking cb where id =#{param2}
</select>

<delete id="match_ask_list_del">

</delete>

</mapper>
